/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar country = document.querySelector('#country');\nvar city = document.querySelector('#city');\nvar search = document.querySelector('.search');\nvar countryName = document.querySelector('.countryname');\nvar description = document.querySelector('.description');\nvar temp = document.querySelector('.temp');\nvar pressure = document.querySelector('.pressure');\nvar humidity = document.querySelector('.humidity');\nvar speed = document.querySelector('.speed');\nvar deg = document.querySelector('.deg');\nvar img = document.querySelector('img');\nsearch.addEventListener('click', function (e) {\n  e.preventDefault();\n  getGif();\n});\n\nfunction getGif() {\n  return _getGif.apply(this, arguments);\n}\n\nfunction _getGif() {\n  _getGif = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var weather, gifURL, data, res, gif;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return getCountryWeather();\n\n          case 2:\n            weather = _context2.sent;\n            gifURL = \"https://api.giphy.com/v1/gifs/translate?api_key=lqK0zQE4DNeoht6DkbPI7pOq1oP8us8S&s=\".concat(weather);\n            _context2.next = 6;\n            return fetch(gifURL);\n\n          case 6:\n            data = _context2.sent;\n            _context2.next = 9;\n            return data.json();\n\n          case 9:\n            res = _context2.sent;\n            gif = res.data.images.downsized_medium.url;\n            appendData.weather();\n            return _context2.abrupt(\"return\", appendData.gif(gif));\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getGif.apply(this, arguments);\n}\n\nfunction checkWeather() {\n  var weatherURL;\n  var con = country.value;\n  var cit = city.value;\n  var x = con.slice(0, 1).toUpperCase() + con.substr(1);\n\n  if (con === '') {\n    return;\n  } else if (cit === '') {\n    weatherURL = \"http://api.openweathermap.org/data/2.5/weather?q=\".concat(x, \"&APPID=18c71bd9206ecf208842e382fc0c73bf\");\n  } else if (cit !== '') {\n    weatherURL = \"http://api.openweathermap.org/data/2.5/weather?q=\".concat(x, \",\").concat(cit, \"&APPID=18c71bd9206ecf208842e382fc0c73bf\");\n  }\n\n  return weatherURL;\n}\n\nfunction getCountryWeather() {\n  return _getCountryWeather.apply(this, arguments);\n}\n\nfunction _getCountryWeather() {\n  _getCountryWeather = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    var weatherURL, get, response, main;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            weatherURL = checkWeather();\n            _context3.next = 3;\n            return fetch(weatherURL);\n\n          case 3:\n            get = _context3.sent;\n            _context3.next = 6;\n            return get.json();\n\n          case 6:\n            response = _context3.sent;\n            main = response.weather[0].main;\n            return _context3.abrupt(\"return\", main);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getCountryWeather.apply(this, arguments);\n}\n\nvar appendData = {\n  gif: function gif(image) {\n    img.setAttribute('src', image);\n  },\n  weather: function weather() {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var weatherURL, get, response, main;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              weatherURL = checkWeather();\n              _context.next = 3;\n              return fetch(weatherURL);\n\n            case 3:\n              get = _context.sent;\n              _context.next = 6;\n              return get.json();\n\n            case 6:\n              response = _context.sent;\n              main = response;\n              countryName.innerText = main.name;\n              description.innerText = main.weather[0].description;\n              temp.innerText = main.main.temp;\n              humidity.innerText = main.main.humidity;\n              pressure.innerText = main.main.pressure;\n              speed.innerText = main.wind.speed;\n              deg.innerText = main.wind.deg;\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n};\n\n//# sourceURL=webpack://Project-Weather-App/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;